#autoload
# -*- mode: zsh; sh-indentation: 2; indent-tabs-mode: nil; sh-basic-offset: 2; -*-
# vim: ft=zsh sw=2 ts=2 et

builtin emulate -RL zsh ${=${options[xtrace]:#off}:+-o xtrace}
builtin setopt extended_glob warn_create_global typeset_silent no_short_loops rc_quotes no_auto_pushd

(( ${ICE[test]:-1} )) || return 0

[[ "$1" = plugin ]] && \
  local type="$1" user="$2" plugin="$3" id_as="$4" dir="$5" || \
  local type="$1" url="$2" id_as="$3" dir="$4"

(( ${+ICE[notest]} )) && return 0

(
  builtin cd -q $dir

  if [[ -f Makefile ]]; then
    â†’za-test-make-targets Makefile
    if (( ${reply[(I)test]} )); then
      [[ "${OPTS[opt_-q,--quiet]}" != 1 ]] && \
        +zi-message "{annex}test-annex{ehi}: {auto}Running \`MAKEFILE' tests"
        integer quiet=0
        zstyle -T ":zi:annex:test" quiet && quiet=1
      if (( quiet )); then
        if make test &>/dev/null; then
          [[ "${OPTS[opt_-q,--quiet]}" != 1 ]] && \
            +zi-message "{annex}test-annex{ehi}: {info}The tests succeeded{rst}"
        else
          [[ "${OPTS[opt_-q,--quiet]}" != 1 ]] && \
            +zi-message "{annex}test-annex{ehi}: {error}The tests have failed{rst}"
        fi
      else
        make test
      fi
    fi
  fi
  local -a farray
  farray=( **/*.zunit(N) )
  if (( ${#farray} )); then
    if type zunit >/dev/null 2>&1; then
      [[ "${OPTS[opt_-q,--quiet]}" != 1 ]] && \
        +zi-message "{annex}test-annex{ehi}: {auto}Running \`ZUnit' tests"
        integer quiet=0
        zstyle -T ":zi:annex:test" quiet && quiet=1
      if (( quiet )); then
        if zunit &>/dev/null; then
          [[ "${OPTS[opt_-q,--quiet]}" != 1 ]] && \
            +zi-message "{annex}test-annex{ehi}: {info}The tests succeeded{rst}"
        else
          [[ "${OPTS[opt_-q,--quiet]}" != 1 ]] && \
            +zi-message "{annex}test-annex{ehi}: {error}The tests have failed{rst}"
        fi
      else
        zunit
      fi
    else
      [[ "${OPTS[opt_-q,--quiet]}" != 1 ]] && \
        +zi-message "{annex}test-annex{ehi}: {auto}Please install \`ZUnit' (zi for z-shell/z-a-meta-plugins @zunit)" \
        "to run the zunit tests provided with the plugin"
    fi
  fi
)
